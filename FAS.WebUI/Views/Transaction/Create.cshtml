@using FAS.WebUI.Models
@model ChangeTransactionViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-md-12">
    @using (Html.BeginForm("Create", "Transaction", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
        @Html.AntiForgeryToken()
        <h4>Добавьте новую транзакцию:</h4>
        <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-2 control-label"><strong>Выберите свой счет</strong></div>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdScore, ViewBag.Scores as SelectList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdScore, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2 control-label"><strong>Выберите категорию</strong></div>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdCategory, ViewBag.Categories as SelectList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdCategory, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 control-label"><strong>Выберите тип транзакции</strong></div>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdTransactionType, ViewBag.TransactionTypes as SelectList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdTransactionType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 control-label"><strong>Выберите банк</strong></div>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdBank, ViewBag.Banks as SelectList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdBank, "", new { @class = "text-danger" })
            </div>
        </div>
                <div class="form-group">
                    <div class="col-md-2 control-label"><strong>Примечание</strong></div>
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Notation, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Notation, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-2 control-label"><strong>Сумма</strong></div>
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Comission, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Comission, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Добавить" class="btn btn-default" />
                    </div>
                </div>
    }
</div>



