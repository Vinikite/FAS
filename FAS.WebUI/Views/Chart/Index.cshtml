
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<div class="row">
    @(Html.Kendo().Chart<ChartModel<double>>()
        .Name("CostByCategory")
        .Title(x => x.Text("Диаграмма расходов по категориям").Position(ChartTitlePosition.Top))
        .DataSource(x => x.Read(r => r.Action("CostByCategory", "Chart")))
        .Legend(x => x.Visible(true).Position(ChartLegendPosition.Bottom))
        .ChartArea(x => x.Background("transparent"))
        .Series(x => x.Pie(m => m.Value, m => m.Category).Padding(0).StartAngle(40))
        .Tooltip(x => x.Visible(true).Template("#= category # — #= value # руб."))


    )
</div>
<div class="row">
    @(Html.Kendo().Chart<ChartModel<int>>()
        .Name("TransactionGroupByBank")
        .Title(x => x.Text("Диаграмма транзакций по банкам").Position(ChartTitlePosition.Top))
        .DataSource(x => x.Read(r => r.Action("TransactionGroupByBank", "Chart")))
        .Legend(x => x.Visible(true).Position(ChartLegendPosition.Bottom))
        .ChartArea(x => x.Background("transparent"))
        .Series(x => x.Column(m => m.Value))
        .CategoryAxis(x => x.Categories(m => m.Category)
                            .MajorGridLines(l => l.Visible(false))
                            .Labels(l => l.Rotation(-90)))
        .Tooltip(x => x.Visible(true).Template("В банке #= category# совершено #= value# транзакций"))

    
    )
</div>

<div class="row">
    @(Html.Kendo().Chart<StackChartModel>()
        .Name("IncomeExpensesGroup")
        .Title(x => x.Text("График расходов и доходов").Position(ChartTitlePosition.Top))
        .DataSource(x => x.Read(r => r.Action("IncomeExpensesGroup", "Chart")))
        .Legend(x => x.Visible(true).Position(ChartLegendPosition.Bottom))
        .ChartArea(x => x.Background("transparent"))
        .Series(x => {
            x.Column(t => t.Expenses).Name("Expenses").Stack("Expenses");
            x.Column(t => t.Incomes).Name("Incomes").Stack("Incomes");
        })
        .CategoryAxis(x => x.Categories(m => m.Category).MajorGridLines(l => l.Visible(false)))
        .Tooltip(x => x.Visible(true).Template("#=category# — #=value# руб."))

    )
</div>